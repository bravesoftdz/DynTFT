program DynTFTExample;

const HEAP_START: Word = $1600;  //make sure this is a valid address and is Word aligned !
const HEAP_SIZE: Word = 20000;   //Make sure enough memory is allocated. See the desktop application (simulator) for guidance.

//Parts of the code come from mikromedia example. Other parts are generated by mikroPascal.

// TFT module connections
var TFT_DataPort : char  at LATE;
    TFT_RST : sbit  at LATC1_bit;
    TFT_BLED : sbit  at LATD2_bit;
    TFT_RS : sbit  at LATB15_bit;
    TFT_CS : sbit  at LATF12_bit;
    TFT_RD : sbit  at LATD5_bit;
    TFT_WR : sbit  at LATD4_bit;
    TFT_DataPort_Direction : char  at TRISE;
    TFT_RST_Direction : sbit  at TRISC1_bit;
    TFT_BLED_Direction : sbit  at TRISD2_bit;
    TFT_RS_Direction : sbit  at TRISB15_bit;
    TFT_CS_Direction : sbit  at TRISF12_bit;
    TFT_RD_Direction : sbit  at TRISD5_bit;
    TFT_WR_Direction : sbit  at TRISD4_bit;
// End TFT module connections

// Touch Panel module connections
var DriveX_Left : sbit at LATB13_bit;
var DriveX_Right : sbit at LATB11_bit;
var DriveY_Up : sbit at LATB12_bit;
var DriveY_Down : sbit at LATB10_bit;
var DriveX_Left_Direction : sbit at TRISB13_bit;
var DriveX_Right_Direction : sbit at TRISB11_bit;
var DriveY_Up_Direction : sbit at TRISB12_bit;
var DriveY_Down_Direction : sbit at TRISB10_bit;
// End Touch Panel module connections

// Global variables
var Xcoord, Ycoord : word;
const ADC_THRESHOLD = 800;


procedure InitializeTouchPanel(); // static
begin
  ADC1_Init;
  TFT_Init_ILI9341_8bit(320, 240);

  TP_TFT_Init(320, 240, 13, 12);                                  // Initialize touch panel
  TP_TFT_Set_ADC_Threshold(ADC_THRESHOLD);                            // Set touch panel ADC threshold

  TFT_Set_Brush(1, CL_WHITE, 0, 0, 0, 0);
  TFT_Rectangle(0, 0, 320, 240);
end;


procedure Check_TP;
begin
  if TP_TFT_Press_Detect then
  begin
    if TP_TFT_Get_Coordinates(@Xcoord, @Ycoord) = 0 then
    begin
      DynTFTMCU_OldXMouse := DynTFTMCU_XMouse;
      DynTFTMCU_OldYMouse := DynTFTMCU_YMouse;
      DynTFTMCU_XMouse := Xcoord;
      DynTFTMCU_YMouse := Ycoord;
      DynTFTReceivedMouseDown := True;
    end;
  end
  else 
  begin
    DynTFTMCU_XMouse := Xcoord;
    DynTFTMCU_YMouse := Ycoord;
    DynTFTReceivedMouseUp := True;
  end;
end;

procedure Init_MCU();
begin
  // Setting output frequency to 140MHz
  PLLFBD := 68;            // PLL multiplier M=70
  CLKDIV := 0x0000;        // PLL prescaler N1=2, PLL postscaler N2=2

  ANSELA := 0x00;          // Convert all I/O pins to digital
  ANSELB := 0x00;
  ANSELC := 0x00;
  ANSELD := 0x00;
  ANSELE := 0x00;
  ANSELG := 0x00;
  Delay_ms(150);
  TFT_Set_Default_Mode;
  TP_TFT_Set_Default_Mode;
end;

begin
  MM_Init;
  
  Init_MCU();
  InitializeTouchPanel();
  TP_TFT_Set_Calibration_Consts(64, 934, 109, 875);    // Set calibration constants

  DynTFT_GUI_Start;
  repeat
    Check_TP;

    DynTFT_GUI_LoopIteration;
  until False;
end.